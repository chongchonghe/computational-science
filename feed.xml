<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://chongchonghe.github.io/computational-science/feed.xml" rel="self" type="application/atom+xml" /><link href="https://chongchonghe.github.io/computational-science/" rel="alternate" type="text/html" /><updated>2022-08-25T19:24:38-05:00</updated><id>https://chongchonghe.github.io/computational-science/feed.xml</id><title type="html">Computational Science Blog</title><subtitle>This is ChongChong He's blog on computational science with a focus on applying Python and Julia to computational physics/astrophysics and machine learning.</subtitle><entry><title type="html">Simulating the solar system with 70 lines of Python code</title><link href="https://chongchonghe.github.io/computational-science/python/animation/2022/08/25/python-solar-system.html" rel="alternate" type="text/html" title="Simulating the solar system with 70 lines of Python code" /><published>2022-08-25T00:00:00-05:00</published><updated>2022-08-25T00:00:00-05:00</updated><id>https://chongchonghe.github.io/computational-science/python/animation/2022/08/25/python-solar-system</id><author><name>Chong-Chong He</name></author><category term="Python" /><category term="animation" /><summary type="html"><![CDATA[Computational astrophysics is a really fun subject where we use computers to simulate astronomical objects and phenomena. To demonstrate the power and beauty of computer simulations in the study of astronomy, I show here a program I wrote with about 70 lines of Python code that simulates a (somewhat) realistic solar system.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://chongchonghe.github.io/computational-science/images/thumbnails/cover-solar-system.jpg" /><media:content medium="image" url="https://chongchonghe.github.io/computational-science/images/thumbnails/cover-solar-system.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Write a Machine Learning Algorithm from Scratch using Python</title><link href="https://chongchonghe.github.io/computational-science/machine%20learning/python/jupyter/2022/08/01/ML-from-scratch.html" rel="alternate" type="text/html" title="Write a Machine Learning Algorithm from Scratch using Python" /><published>2022-08-01T00:00:00-05:00</published><updated>2022-08-01T00:00:00-05:00</updated><id>https://chongchonghe.github.io/computational-science/machine%20learning/python/jupyter/2022/08/01/ML-from-scratch</id><author><name>Chong-Chong He (che1234@umd.edu)</name></author><category term="machine learning" /><category term="Python" /><category term="jupyter" /><summary type="html"><![CDATA[Handwritten Digit Recognition with Logistic Regression]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://i.imgur.com/SGP0FsX.png" /><media:content medium="image" url="https://i.imgur.com/SGP0FsX.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Scientific Computing Blog (1): Hydrodynamics Code using Julia</title><link href="https://chongchonghe.github.io/computational-science/julia/hydro/2021/11/09/julia-hydro.html" rel="alternate" type="text/html" title="Scientific Computing Blog (1): Hydrodynamics Code using Julia" /><published>2021-11-09T00:00:00-06:00</published><updated>2021-11-09T00:00:00-06:00</updated><id>https://chongchonghe.github.io/computational-science/julia/hydro/2021/11/09/julia-hydro</id><author><name>Chong-Chong He</name></author><category term="Julia" /><category term="Hydro" /><summary type="html"><![CDATA[I am a strong proponent of Julia as a programming language for scientific computing. Julia is a new language that is as fast as C/Fortran and as easy to use as Python. In this demonstration, I wrote a one-dimensional hydrodynamics code using the Lax scheme and Euler method. Below is an animation of the gas with a classical initial condition: a Sod shock tube. The simulation, plotting, and animation are all done by a single Julia script which you can download from here. The script is also copied below. From the scripts, you can appreciate the simplicity and cleanness of the syntax.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://chongchonghe.github.io/computational-science/images/thumbnails/hydro_00010.png" /><media:content medium="image" url="https://chongchonghe.github.io/computational-science/images/thumbnails/hydro_00010.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Fastpages Notebook Blog Post</title><link href="https://chongchonghe.github.io/computational-science/jupyter/2020/02/20/test.html" rel="alternate" type="text/html" title="Fastpages Notebook Blog Post" /><published>2020-02-20T00:00:00-06:00</published><updated>2020-02-20T00:00:00-06:00</updated><id>https://chongchonghe.github.io/computational-science/jupyter/2020/02/20/test</id><author><name></name></author><category term="jupyter" /><summary type="html"><![CDATA[A tutorial of fastpages for Jupyter notebooks.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://chongchonghe.github.io/computational-science/images/chart-preview.png" /><media:content medium="image" url="https://chongchonghe.github.io/computational-science/images/chart-preview.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">An Example Markdown Post</title><link href="https://chongchonghe.github.io/computational-science/markdown/2020/01/14/test-markdown-post.html" rel="alternate" type="text/html" title="An Example Markdown Post" /><published>2020-01-14T00:00:00-06:00</published><updated>2020-01-14T00:00:00-06:00</updated><id>https://chongchonghe.github.io/computational-science/markdown/2020/01/14/test-markdown-post</id><author><name></name></author><category term="markdown" /><summary type="html"><![CDATA[A minimal example of using markdown with fastpages.]]></summary></entry></feed>